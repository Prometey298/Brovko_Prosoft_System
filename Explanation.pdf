////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include <iostream>: Подключает библиотеку для ввода и вывода данных.
#include <string>: Подключает библиотеку для работы со строками.
using namespace std;: Позволяет использовать стандартные функции и объекты без префикса std::.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
w и h: Хранят ширину и высоту здания.
n: Максимальное количество попыток, которые Бэтмен может сделать для нахождения бомбы (хотя это значение не используется в логике программы).
x0 и y0: Начальные координаты Бэтмена.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int left = 0, right = w - 1, top = 0, bottom = h - 1;
Эти переменные определяют границы области поиска для Бэтмена. Изначально они равны границам здания.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
while (1) {
    string bomb_dir;  // направление бомбы от текущего местоположения Бэтмена
    cin >> bomb_dir;
    cin.ignore();
Цикл продолжается бесконечно (пока не будет прерван), ожидая ввода направления от бомбы.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
if (bomb_dir.find('U') != string::npos) {
    bottom = y0 - 1;  // Поднимаем нижнюю границу вверх
}
if (bomb_dir.find('D') != string::npos) {
    top = y0 + 1;  // Опускаем верхнюю границу вниз
}
if (bomb_dir.find('L') != string::npos) {
    right = x0 - 1;  // Сдвигаем правую границу влево
}
if (bomb_dir.find('R') != string::npos) {
    left = x0 + 1;  // Сдвигаем левую границу вправо
}
В зависимости от введенного направления (U, D, L, R), программа обновляет границы поиска:
U (вверх): поднимает нижнюю границу.
D (вниз): опускает верхнюю границу.
L (влево): сдвигает правую границу влево.
R (вправо): сдвигает левую границу вправо.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
x0 = (left + right) / 2;
y0 = (top + bottom) / 2;
После обновления границ программа вычисляет новую позицию Бэтмена как среднюю точку текущих границ.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
cout << x0 << " " << y0 << endl;
Программа выводит новые координаты Бэтмена, чтобы он мог продолжать искать бомбу.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
